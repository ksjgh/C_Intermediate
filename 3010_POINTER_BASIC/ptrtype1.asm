; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27023.1 

	TITLE	Y:\VMWARE_SHARED\CINTERMEDIATE\3010_POINTER_BASIC\ptrtype1.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	__fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_DATA	SEGMENT
$SG7446	DB	'%p : %x', 0aH, 00H
	ORG $+3
$SG7447	DB	'%p : %x', 0aH, 00H
	ORG $+3
$SG7448	DB	'%p : %x', 0aH, 00H
	ORG $+3
$SG7449	DB	'%p : %f', 0aH, 00H
_DATA	ENDS
; Function compile flags: /Odtp
; File y:\vmware_shared\cintermediate\3010_pointer_basic\ptrtype1.c
_TEXT	SEGMENT
_p4$ = -20						; size = 4
_p3$ = -16						; size = 4
_p2$ = -12						; size = 4
_p1$ = -8						; size = 4
_n$ = -4						; size = 4
_main	PROC

; 4    : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 5    :     int n = 0x11223344;

	mov	DWORD PTR _n$[ebp], 287454020		; 11223344H

; 6    :     int   *p1 = &n;

	lea	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR _p1$[ebp], eax

; 7    :     char  *p2 = &n;

	lea	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR _p2$[ebp], ecx

; 8    :     short *p3 = &n;

	lea	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR _p3$[ebp], edx

; 9    :     float *p4 = &n;

	lea	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR _p4$[ebp], eax

; 10   : 
; 11   :     printf("%p : %x\n", p1, *p1); // 1000, 11223344

	mov	ecx, DWORD PTR _p1$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	push	OFFSET $SG7446
	call	_printf
	add	esp, 12					; 0000000cH

; 12   :     printf("%p : %x\n", p2, *p2); // 1000, 44

	mov	ecx, DWORD PTR _p2$[ebp]
	movsx	edx, BYTE PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p2$[ebp]
	push	eax
	push	OFFSET $SG7447
	call	_printf
	add	esp, 12					; 0000000cH

; 13   :     printf("%p : %x\n", p3, *p3); // 1000, 3344

	mov	ecx, DWORD PTR _p3$[ebp]
	movsx	edx, WORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p3$[ebp]
	push	eax
	push	OFFSET $SG7448
	call	_printf
	add	esp, 12					; 0000000cH

; 14   :     printf("%p : %f\n", p4, *p4); // 1000, ???

	mov	ecx, DWORD PTR _p4$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _p4$[ebp]
	push	edx
	push	OFFSET $SG7449
	call	_printf
	add	esp, 16					; 00000010H

; 15   : }

	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 954  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 955  :         int _Result;
; 956  :         va_list _ArgList;
; 957  :         __crt_va_start(_ArgList, _Format);

	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax

; 958  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax

; 959  :         __crt_va_end(_ArgList);

	mov	DWORD PTR __ArgList$[ebp], 0

; 960  :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 961  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 642  :     {

	push	ebp
	mov	ebp, esp

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H

; 644  :     }

	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

	push	ebp
	mov	ebp, esp

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
