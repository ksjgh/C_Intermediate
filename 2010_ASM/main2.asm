; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27023.1

	TITLE	Y:\VMWARE_SHARED\CINTERMEDIATE\2010_ASM\main2.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_Add
PUBLIC	_main
; Function compile flags: /Odtp
; File y:\vmware_shared\cintermediate\2010_asm\main2.c
_TEXT	SEGMENT
_n$ = -4						; size = 4
_main	PROC

; 32   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 33   :     int n = Add(1,2);   // push 2

	push	2
	push	1
	call	_Add
	add	esp, 8
	mov	DWORD PTR _n$[ebp], eax

; 34   :                         // push 1
; 35   :                         // call _Add
; 36   :                         // add  esp, 8
; 37   :                         // mov  dword[ebp-4], eax
; 38   :
; 39   : }

	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File y:\vmware_shared\cintermediate\2010_asm\main2.c
_TEXT	SEGMENT
_y$ = -8						; size = 4
_x$ = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_Add	PROC

; 17   : {                       // mov  ebp, esp

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 18   :     int x = 0;          // sub  esp, 8

	mov	DWORD PTR _x$[ebp], 0

; 19   :     int y = 0;          // mov  dword[ebp-4], 0

	mov	DWORD PTR _y$[ebp], 0

; 20   :                         // mov  dword[ebp-8], 0
; 21   :
; 22   :     x = a + b;          // mov eax, dword[ebp+8]

	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _x$[ebp], eax

; 23   :                         // add eax, dword[ebp+12]
; 24   :
; 25   :                         // mov dword[ebp-4], eax
; 26   :
; 27   :                         // mov   eax, dword[ebp-4]
; 28   :     return x;           // mov   esp, ebp

	mov	eax, DWORD PTR _x$[ebp]

; 29   : }                       // pop   ebp

	mov	esp, ebp
	pop	ebp			leave
	ret	0
_Add	ENDP
_TEXT	ENDS
END
